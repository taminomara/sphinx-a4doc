name: Build and publish to PyPI

on:
  push:
    tags:
    - 'v*'

jobs:
  build:
    name: Build and publish to PyPI
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - run: "git fetch --depth=1 origin +refs/tags/*:refs/tags/* || :"
    - name: Get the version
      id: get_version
      run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\/v/}
    - name: Set up Python 3.12
      uses: actions/setup-python@v1
      with:
        python-version: 3.12
    - name: Install pep517 and twine
      run: python -m pip install pep517 twine --user
    - name: Build a binary wheel and a source tarball
      run: python -m pep517.build --source --binary --out-dir dist/ ./
    - name: twine check
      run: python -m twine check dist/*
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release v${{ steps.get_version.outputs.VERSION }}
        draft: false
        prerelease: false
    - name: Upload source Asset
      id: upload-source-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: dist/sphinx-a4doc-${{ steps.get_version.outputs.VERSION }}.tar.gz
        asset_name: sphinx-a4doc-${{ steps.get_version.outputs.VERSION }}.tar.gz
        asset_content_type: application/tar+gzip
    - name: Publish distribution to Test PyPI
      uses: pypa/gh-action-pypi-publish@master
      with:
        password: ${{ secrets.TEST_PYPI_PASSWORD }}
        repository_url: https://test.pypi.org/legacy/
    - name: Publish distribution to PyPI
      uses: pypa/gh-action-pypi-publish@master
      with:
        password: ${{ secrets.PYPI_PASSWORD }}
